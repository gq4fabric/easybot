INLINE=0 SHOW_CODE=1 SAVE_CODE=0 COLCON=1 RUNEXE=0
source ezb.sh 

interfaces(){
	mk_hpp_prj easybot easybot
	mk_msg_prj tello_msgs "FlightData TelloResponse"
	mk_msg_prj qq_msg Contact
	mk_srv_prj tello_srvs TelloAction
	mk_srv_prj qq_srv AddTwoFloats
	#mk_cpp_prj two_nodes "easybot rclcpp qq_eb_msg qq_eb_srv" two_nodes
}

img_pub(){
	req="easybot rclcpp sensor_msgs OpenCV" myImpl="decl cons timer_tm glob sub_image"
	includes=("easybot/easybot.hpp" "opencv2/opencv.hpp" "opencv2/imgproc/imgproc.hpp" "opencv2/highgui/highgui.hpp")
	opts=("TIMER,tm,80" "TIMESOURCE,ts,clk" "Pub,image,sensor_msgs::msg::Image,sensor_msgs/msg/image.hpp")
	mk_all $FUNCNAME
}
img_pubsub(){
	req="easybot rclcpp sensor_msgs OpenCV" myImpl="decl cons glob timer_tm sub_image"
	includes=("easybot/easybot.hpp" "opencv2/opencv.hpp" "opencv2/imgproc/imgproc.hpp" "opencv2/highgui/highgui.hpp")
	opts=("TIMER,tm,80" "TIMESOURCE,ts,clk" "Sub,image,sensor_msgs::msg::Image,sensor_msgs/msg/image.hpp"\
		"Pub,image,sensor_msgs::msg::Image,sensor_msgs/msg/image.hpp")
	mk_all $FUNCNAME
}

isub() { 
	req="easybot rclcpp sensor_msgs OpenCV" myImpl="decl cons timer_tm glob sub_image"
	includes=("easybot/easybot.hpp" "opencv2/opencv.hpp" "opencv2/imgproc/imgproc.hpp" "opencv2/highgui/highgui.hpp")
	opts=( "Sub,image,sensor_msgs::msg::Image,sensor_msgs/msg/image.hpp")
	mk_all $FUNCNAME
}

joint_states() { 
	req="easybot rclcpp sensor_msgs" myImpl="decl cons timer_tm glob"
	includes=("easybot/easybot.hpp")
	opts=("TIMER,tm,20" "TIMESOURCE,ts,clock"  "Pub,joint_states,sensor_msgs::msg::JointState,sensor_msgs/msg/joint_state.hpp")
	mk_all $FUNCNAME
}
laser(){
	req="easybot rclcpp sensor_msgs" myImpl="decl cons timer_tm glob"
	includes=("easybot/easybot.hpp")
	opts=("TIMER,tm,1000" "TIMESOURCE,ts,clock" "Pub,scan,sensor_msgs::msg::LaserScan,sensor_msgs/msg/laser_scan.hpp")
	mk_all $FUNCNAME
}
mapserver(){
	req="easybot rclcpp nav_msgs" myImpl="decl cons timer_tm glob sub_image"
	includes=("easybot/easybot.hpp" "rclcpp/clock.hpp" "rclcpp/time_source.hpp")
	opts=("TIMER,tm,10" "TIMESOURCE,ts,clock" "Pub,map,nav_msgs::msg::OccupancyGrid,nav_msgs/msg/occupancy_grid.hpp")
	mk_all $FUNCNAME
}

##interfaces 
##img_pub 
img_pubsub 
##isub 
##joint_states 
##laser 
##mapserver

#decl|//your declarations here...
#cons|//your constructions here...
#glob|//your global codes here...
#timer_tm|//your timer codes here...
